version: "3.9"

services:
  db:
    image: postgres:16
    restart: always
    env_file: .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

    # ✅ Add healthcheck to ensure DB is ready before Django starts
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build: ./web
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    env_file: .env
    environment:
      DATABASE_NAME: ${POSTGRES_DB}
      DATABASE_USER: ${POSTGRES_USER}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASE_HOST: ${POSTGRES_HOST}
      DEBUG: ${DEBUG}
    volumes:
      - ./web:/app
      - static_volume:/app/static
      - media_volume:/app/media
    expose:
      - 8000
    depends_on:
      db:
        condition: service_healthy   # ✅ Wait until PostgreSQL passes healthcheck

  nginx:
    image: nginx:latest
    depends_on:
      - web
    ports:
      - "80:80"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - static_volume:/app/static
      - media_volume:/app/media

volumes:
  postgres_data:
  static_volume:
  media_volume:
